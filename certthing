#!/bin/bash
version=1.1

# space separated list of domains
wildDomains="phospher.com gorc.me briansmiller.com"
certDir="/mnt/certs"


date
echo
if [ ! -f $certDir/ready.nodelete ]; then
	echo "[ ERROR: ] The certDir must contain the file 'ready.nodelete' at its root, as an indicator the filesytem is mounted and ready to use."
	echo
	exit 1
fi


for wildDomain in $wildDomains; do
	echo
	echo "Processing wildcard cert for $wildDomain..."
	echo

	
	currentMd5=$(md5sum $certDir/live/$wildDomain/cert.pem |cut -d " " -f1)

	/usr/bin/certbot certonly --dry-run --test-cert \
	--max-log-backups 5 \
	--manual --manual-auth-hook "/opt/stateful/scripts/dnsauth" --preferred-challenge dns-01 \
	--config-dir $certDir --work-dir $certDir --logs-dir $certDir \
	--non-interactive --manual-public-ip-logging-ok --agree-tos -m brian@phospher.com \
	-d "*.$wildDomain"
	RESULT=$?
	echo

	newMd5=$(md5sum $certDir/live/$wildDomain/cert.pem |cut -d " " -f1)

	if [ ! "$RESULT" = 0 ]; then
                echo "[ ERROR: ] Certs could not be renewed for $wildDomain!"
		# send external notification (e.g., discord)
                continue
        fi

	if [ ! "$currentMd5" = "$newMd5" ]; then
		echo "[ NOTICE: ] Cert changed for $wildDomain! Triggering app updates..."

		# send external app trigger (e.g., nginx -s reload)
		echo "[ NOTICE: ] Reloading ext-nginx1..."
		ssh root@cerebrum.phospher.com -o StrictHostKeyChecking=no /usr/bin/docker exec -i ext-nginx1 "/bin/bash -c '/usr/sbin/nginx -s reload'"
                echo "[ NOTICE: ] Reloading int-nginx1..."
                ssh root@cerebrum.phospher.com -o StrictHostKeyChecking=no /usr/bin/docker exec -i int-nginx1 "/bin/bash -c '/usr/sbin/nginx -s reload'"

		# send external notification (e.g., discord)
		continue
	else
		echo "[ NOTICE: ] Cert not updated..."
		continue
	fi


	echo
done
